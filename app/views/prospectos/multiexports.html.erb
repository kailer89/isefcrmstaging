
<%

  def getProspectosForUser (user)

    archivado = false
      modelo = Configuracione.where(:user_id=>user.id).first rescue nil
      if modelo != nil
        archivado = modelo.mostrar_archivados
      end

    rol = Role.where(:id=>user.role).first

    if rol == nil
      return Prospecto.where(:archivado=>archivado).where(:sede_id=>user.sede).where(:user_id=>user.id)
    else
      if rol.nombre == "DN" or rol.nombre == "ACRM" 
        return Prospecto.where(:archivado=>archivado)
      else
        if rol.nombre == "D" or rol.nombre == "CP"

          return Prospecto.where(:archivado=>archivado).where(:sede_id=>user.sede)
        else

          return Prospecto.where(:archivado=>archivado).where(:sede_id=>user.sede).where(:user_id=>user.id)
        end #end director
      end #end else rol nombre
    end #end else nil

  end


  def getSolicitantesForUser (user)

    archivado = false
      modelo = Configuracione.where(:user_id=>user.id).first rescue nil
      if modelo != nil
        archivado = modelo.mostrar_archivados
      end

    rol = Role.where(:id=>user.role).first

    if rol == nil
      return Solicitante.where(:archivado=>archivado).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user))
    else
      if rol.nombre == "DN" or rol.nombre == "ACRM" 
        return Solicitante.where(:archivado=>archivado).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user))
      else
        if rol.nombre == "D" or rol.nombre == "CP"
          return Solicitante.where(:archivado=>archivado).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user))
        else

          return Solicitante.where(:archivado=>archivado).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user))
        end #end director
      end #end else rol nombre
    end #end else nil

  end



  def getExaminadosForUser (user)

    archivado = false
      modelo = Configuracione.where(:user_id=>user.id).first rescue nil
      if modelo != nil
        archivado = modelo.mostrar_archivados
      end

    rol = Role.where(:id=>user.role).first

    if rol == nil
      return Examinado.where(:archivado=>archivado).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))
    else
      if rol.nombre == "DN" or rol.nombre == "ACRM" 
        return Examinado.where(:archivado=>archivado)
      else
        if rol.nombre == "D" or rol.nombre == "CP"
          return Examinado.where(:archivado=>archivado).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))
        else

          return Examinado.where(:archivado=>archivado).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))
        end #end director
      end #end else rol nombre
    end #end else nil

  end



  def getAdmitidosForUser (user)

    archivado = false
      modelo = Configuracione.where(:user_id=>user.id).first rescue nil
      if modelo != nil
        archivado = modelo.mostrar_archivados
      end

    rol = Role.where(:id=>user.role).first

    if rol == nil
      return Admitido.where(:archivado=>archivado).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante})))
    else
      if rol.nombre == "DN" or rol.nombre == "ACRM" 
        return Admitido.where(:archivado=>archivado)
      else
        if rol.nombre == "D" or rol.nombre == "CP"
          return Admitido.where(:archivado=>archivado).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante})))
        else

          return Admitido.where(:archivado=>archivado).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante})))
        end #end director
      end #end else rol nombre
    end #end else nil

  end   

  def getInscritosForUser (user)

    archivado = false
      modelo = Configuracione.where(:user_id=>user.id).first rescue nil
      if modelo != nil
        archivado = modelo.mostrar_archivados
      end

    rol = Role.where(:id=>user.role).first

    if rol == nil
      return Inscrito.where(:archivado=>archivado).where("admitido_id in (:admitidos)",:admitidos=>getAdmitidosForUser(user).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))))
    else
      if rol.nombre == "DN" or rol.nombre == "ACRM" 
        return Inscrito.where(:archivado=>archivado)
      else
        if rol.nombre == "D" or rol.nombre == "CP"
          return Inscrito.where(:archivado=>archivado).where("admitido_id in (:admitidos)",:admitidos=>getAdmitidosForUser(user).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))))
        else

          return Inscrito.where(:archivado=>archivado).where("admitido_id in (:admitidos)",:admitidos=>getAdmitidosForUser(user).where("examinado_id in (:examinados)",:examinados=>getExaminadosForUser(user).where("solicitante_id in (:solicitantes)",:solicitantes=>getSolicitantesForUser(user).where("prospecto_id in (:prospectos)",:prospectos=>getProspectosForUser(user).joins{solicitante}))))
        end #end director
      end #end else rol nombre
    end #end else nil

  end
prsopectos = getSolicitantesForUser(current_user).map{|c| [c.id] }.sort
#.each_slice(3).to_a
finals = []
arrays = prsopectos.each_slice(100).to_a

arrays.each do |a|
	new_state = Itemn.new
	new_state.maximo = a.max
	new_state.minimo = a.min
	finals.push(new_state)
end

as1 = 0
%>
<div class="page-header hidden-phone hidden-tablet">
  <h1><small>Por favor seleccione el rango de elementos a exportar.</small></h1>
</div>

<table class="table table-condensed table-hover table-bordered table-striped">
  <thead>
    <tr>
      <th>#</th>
      <th>Inicio</th>
      <th>Fin</th>
      <th>Descarga</th>
    </tr>
  </thead>
  <tbody>
<% finals.each do |f| %>
	<% 
mn = f.minimo
mx = f.maximo
	%>



    <tr>
    	<%as1 = as1 + 1%>
      <td><%=as1%></td>
      <td><%=f.minimo[0]%></td>
      <td><%=f.maximo[0]%></td>
      <td><%= link_to raw("<i class=""icon-arrow-down""></i>Exportar a Excel<i class=""icon-arrow-down""></i>"), solicitantes_path(format: 'xls',:inicio=>f.minimo[0],:final=>f.maximo[0]), :class => 'btn btn-mini btn-info' %> </td>
    </tr>

<%end%>
  </tbody>
</table>